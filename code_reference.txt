# 001
mkdir -p ~/repos
git clone git@github.com:GITHUB_USERNAME/flux-bootstrap.git ~/repos/flux-bootstrap
cd ~/repos/flux-bootstrap

# 002
# AKS cluster properties
aks_resource_group_name = "RESOURCE_GROUP_NAME_WITH_AKS_RESOURCE"
aks_cluster_name        = "AKS_RESOURCE_NAME"

# Target Git repository properties
system_repo = {
  url = "ssh://git@github.com/GITHUB_USERNAME/flux-bootstrap.git"
}

# Deployment SSH credentials (read/write)
bootstrap_credentials = {
  ssh_private_key_path = "PATH_TO_YOUR_SSH_ADMIN_PRIVATE_KEY"
}

# Flux SSH credentials (read-only)
flux_credentials = {
  ssh_private_key_path = "PATH_TO_YOUR_SSH_DEPLOY_PRIVATE_KEY"
  ssh_public_key_path  = "PATH_TO_YOUR_SSH_DEPLOY_PUBLIC_KEY"
}

# 003
az login --tenant YOUR_TENANT_ID
az account set -s YOUR_SUBSCRIPTION_NAME_OR_ID

# 004
cd ~/repos/flux-bootstrap/terraform
terraform init
terraform apply

# 005
kubectl get all -n flux-system

# 006
kubectl delete secret flux-system -n flux-system

# 007
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - gotk-components.yaml
  - gotk-sync.yaml
patches:
  - patch: |
      apiVersion: source.toolkit.fluxcd.io/v1beta2
      kind: GitRepository
      metadata:
        name: flux-system
        namespace: flux-system
      spec:
        secretRef:
          name: flux-sync
    target:
      kind: GitRepository
      name: flux-system
      namespace: flux-system

# 008
kubectl get deployments -n flux-system

# 009
kubectl get crd -n flux-system | grep flux

# 010
kubectl api-resources | grep fluxcd

# 011
kubectl get gitrepo/flux-system -n flux-system -o yaml

# 012
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: before-apps       # The name of this resource
  namespace: flux-system  # The namespace it will live in
spec:
  interval: 5m0s          # How often to reconcile
  path: ./flux/apps/development/before # The folder with the resources to reconcile
  prune: true             # Remove stale resources from the cluster
  sourceRef:
    kind: GitRepository   # What type of source are we referencing
    name: flux-system     # The source resource

# 013
apiVersion: kustomize.config.k8s.io/v1beta1 # Note: Not a Flux Kustomization (confusing, we know)
kind: Kustomization
resources:
  - namespaces # Reconcile our namespaces folder in the same dir
  - helmrepos  # Reconcile our helmrepos folder in the same dir

# 014
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - metrics.yaml # Reconcile our metrics.yaml namespace

# 015
apiVersion: v1
kind: Namespace
metadata:
  name: metrics

# 016
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - prometheus-community.yaml # Reconcile our prometheus-community.yaml Helm source

# 017
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository # Helm repo source
metadata:
  namespace: flux-system      # Where will this source resource live
  name: prometheus-community  # The local name for this source within Flux
spec:
  interval: 30m # How often to update the chart source
  url: https://prometheus-community.github.io/helm-charts # Source URL for the repo

# 018
kubectl get kustomizations -n flux-system

# 019
kubectl get ns | grep metrics

# 020
kubectl get helmrepo -n flux-system

# 021
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: kube-state-metrics
  namespace: flux-system
spec:
  dependsOn:
  - name: before-apps
    namespace: flux-system
  interval: 5m0s
  path: ./flux/apps/development/kube-state-metrics
  prune: true
  sourceRef:
    kind: GitRepository
    name: flux-system

# 022
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - kube-state-metrics.helm.yaml

# 023
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease # Helm release resource
metadata:
  name: kube-state-metrics # Name of the HelmRelease
  namespace: metrics       # Which namespace will it live in
spec:
  chart:
    spec:
      chart: kube-state-metrics # Which chart to deploy from our source
      reconcileStrategy: ChartVersion # See note
      sourceRef:
        kind: HelmRepository       # The type of our source for this HelmRelease
        name: prometheus-community # The local name for the Helm repo source
        namespace: flux-system     # The namespace where the source resides
      version: '=4.30.0'           # Semantic chart versions we will allow to deploy
  interval: 10m0s                  # Source interval check frequency

# 024
kubectl get kustomizations -A

# 025
kubectl get helmrelease -n metrics

# 026
kubectl get deployment -n metrics

# 027
kubectl get helmrelease/kube-state-metrics -n metrics -o=jsonpath='{$.spec.chart.spec.version}'

# 028
kubectl get deployment/kube-state-metrics -n metrics -o=jsonpath='{$.spec.template.spec.containers[:1].image}'

# 029
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease # Helm release resource
metadata:
  name: kube-state-metrics # Name of the HelmRelease
  namespace: metrics       # Which namespace will it live in
spec:
  chart:
    spec:
      chart: kube-state-metrics # Which chart to deploy from our source
      reconcileStrategy: ChartVersion # See note
      sourceRef:
        kind: HelmRepository       # The type of our source for this HelmRelease
        name: prometheus-community # The local name for the Helm repo source
        namespace: flux-system     # The namespace where the source resides
      version: '=4.3.0'           # Semantic chart versions we will allow to deploy
  interval: 10m0s                  # Source interval check frequency

# 030
kubectl get helmrelease/kube-state-metrics -n metrics -o=jsonpath='{$.spec.chart.spec.version}'

# 031
kubectl get deployment/kube-state-metrics -n metrics -o=jsonpath='{$.spec.template.spec.containers[:1].image}'

# 032
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease # Helm release resource
metadata:
  name: kube-state-metrics # Name of the HelmRelease
  namespace: metrics       # Which namespace will it live in
spec:
  chart:
    spec:
      chart: kube-state-metrics # Which chart to deploy from our source
      reconcileStrategy: ChartVersion # See note
      sourceRef:
        kind: HelmRepository       # The type of our source for this HelmRelease
        name: prometheus-community # The local name for the Helm repo source
        namespace: flux-system     # The namespace where the source resides
      version: '=5.0.0'            # Semantic chart versions we will allow to deploy
  interval: 10m0s                  # Source interval check frequency
  values:
    autosharding:
      enabled: true                # Enable statefulset feature
    replicas: 3                    # Use 3 pods in our statefulset

# 033
kubectl get statefulset -n metrics

# 034
apiVersion: notification.toolkit.fluxcd.io/v1beta1
kind: Provider
metadata:
  name: msteams
  namespace: flux-system
spec:
  type: msteams
  address: <YOUR_TEAMS_INCOMING_WEBHOOK_URL>
---
apiVersion: notification.toolkit.fluxcd.io/v1beta1
kind: Alert
metadata:
  name: msteams
  namespace: flux-system
spec:
  providerRef:
    name: msteams
  eventSeverity: info
  eventSources:
  - kind: Bucket
    name: '*'
  - kind: GitRepository
    name: '*'
  - kind: Kustomization
    name: '*'
  - kind: HelmRelease
    name: '*'
  - kind: HelmChart
    name: '*'
  - kind: HelmRepository
    name: '*'
  - kind: ImageRepository
    name: '*'
  - kind: ImagePolicy
    name: '*'
  - kind: ImageUpdateAutomation
    name: '*'

# 035
cd ~/repos/flux-bootstrap/notifications/
kubectl apply -f flux-msteams.yaml

# 036
kubectl delete -f flux-msteams.yaml